{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ADBMS CHEATSHIT","text":"<ol> <li>Parallel Database</li> </ol>"},{"location":"Parallel/","title":"Paralllel Database","text":"<ul> <li>Moores law: Number of processors will double every 18-24 months</li> <li>CPU performance would increase by 50-60%</li> <li>I/O becomes bottleneck</li> </ul>"},{"location":"Parallel/#parallel-database-systems","title":"Parallel database systems","text":"<ul> <li>Single Administrative system</li> <li>Homogenous working environment</li> <li>Close proximity of data storage</li> <li>Multiple processors</li> </ul>"},{"location":"Parallel/#grid-database-systems","title":"Grid database systems","text":"<ul> <li>Heterogenous collaboration of resources</li> <li>Provide seamless access to geographically distributed data sources</li> </ul>"},{"location":"Parallel/#definitions","title":"Definitions:","text":"<ul> <li>Throughput: The number of tasks that can be completed within a given interval of time.</li> <li>Response time: The amount of time it takes to complete a single task from the time it is submitted.</li> <li>Speed up: Performance improvement because of extra processing elements added. Speed up = elapsed time on uniprocessor / elapsed tiem on multiprocessor</li> <li>Scale up: Performance improvement because of extra resource added. Scale up = uniprocessor elapsed time on small system / multi processor elapsed time on larger system</li> </ul>"},{"location":"Parallel/#transactional-scale-up","title":"Transactional Scale up:","text":"<ul> <li>The increase in rate at which transactions are processed</li> <li>N-times as many users are submitting N-times as many requests or transactions against an N-times larger database</li> </ul>"},{"location":"Parallel/#data-scale-up","title":"Data Scale Up:","text":"<ul> <li>The increase in size of the database, and the task is a large job who runtime depends on the size of the database (e.g. sorting)</li> <li>Typically found in online analytical processing (OLAP)</li> </ul>"},{"location":"Parallel/#forms-of-parallelism","title":"Forms of parallelism","text":"<ol> <li>interquery</li> <li>intraquery</li> <li>intra operation</li> <li>inter operation</li> <li>mixed</li> </ol>"},{"location":"Parallel/#interquery-parallelism","title":"Interquery parallelism","text":"<ul> <li>Parallelism among queries</li> <li>Different Queries executed in parallel with one another</li> </ul>"},{"location":"Parallel/#intra-query-parallelism","title":"Intra query parallelism","text":"<ul> <li>Parallelism within a query</li> <li>Execution of a single query in parallel or multi processor and disks</li> </ul>"},{"location":"Parallel/#intraoperation","title":"Intraoperation","text":"<ul> <li>Speeding up the processing of a query by parallelizing the execution of each individual operation (e.g. parallel sort, parallel search, etc)</li> </ul>"},{"location":"Parallel/#interoperation","title":"Interoperation","text":"<ul> <li>Speeding up the processing of a query by executing in parallel different operations in a query expression (e.g. simultaneous sorting or searching)</li> </ul>"},{"location":"Parallel/#pipeline-parallelism","title":"Pipeline Parallelism","text":"<ul> <li>Output record of operation is given as input for another operation</li> <li>Useful with a small number of processors, but does not scale up well</li> </ul>"},{"location":"Parallel/#independent-parallelism","title":"Independent Parallelism","text":"<ul> <li>Operations in a query that do not depend on one another are executed in parallel</li> <li>Does not provide a high degree of parallelism </li> </ul>"},{"location":"Parallel/#parallel-database-architecture","title":"Parallel Database Architecture","text":"<ul> <li>Shard Disk</li> <li>Shared Nothing</li> <li>Shared Something</li> </ul>"}]}